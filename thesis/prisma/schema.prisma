generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Doctor {
  id           String        @id @default(cuid())
  name         String
  image        String
  speciality   Speciality
  degree       String
  experience   String
  about        String
  fees         Float
  addressLine1 String
  addressLine2 String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  appointments Appointment[]
}

model Appointment {
  id                  String            @id @default(cuid())
  patientName         String
  doctorId            String
  appointmentDateTime DateTime
  status              AppointmentStatus
  fees                Float
  paymentStatus       PaymentStatus
  transactionId       String?
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  notes               String?
  patientEmail        String
  userId              String
  paymentMethod       PaymentMethod
  doctor              Doctor            @relation(fields: [doctorId], references: [id])
  Notifications       Notification[]
  rating              Rating?

  @@index([userId])
  @@index([doctorId])
}

model Notification {
  id            String             @id @default(cuid())
  userId        String
  content       String
  type          NotificationType
  status        NotificationStatus
  createdAt     DateTime           @default(now())
  appointmentId String?
  Appointment   Appointment?       @relation(fields: [appointmentId], references: [id])
}

model DashboardStats {
  id                Int      @id @default(1)
  totalAppointments Int      @default(0)
  totalRevenue      Float    @default(0)
  updatedAt         DateTime @updatedAt
  lastMonthRevenue  Float    @default(0)
}

model Rating {
  id            String      @id @default(cuid())
  appointmentId String      @unique
  value         Int         @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
}

enum Speciality {
  GENERAL_PHYSICIAN
  GYNECOLOGIST
  DERMATOLOGIST
  PEDIATRICIAN
  NEUROLOGIST
  GASTROENTEROLOGIST
}

enum AppointmentStatus {
  PENDING
  SCHEDULED
  CANCELLED
}

enum NotificationType {
  REMINDER
  CANCELLATION
  UPDATE
}

enum NotificationStatus {
  UNREAD
  READ
}

enum PaymentStatus {
  PAID
  PENDING
  FAILED
}

enum PaymentMethod {
  CASH
  CARD
}
